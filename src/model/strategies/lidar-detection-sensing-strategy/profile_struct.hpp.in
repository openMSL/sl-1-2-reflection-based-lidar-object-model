//
// Copyright 2022 Technical University of Darmstadt - FZD
// SPDX-License-Identifier: MPL-2.0
//
    struct detection_sensing_parameters {
        
        size_t max_echos_per_beam;              // maximum number of detections that are calculated per beam
        float distance_resolution_adc;          // Specified distance resolution of the adc in m, 0.3 means time resolution of 1 ns
        float distance_resolution;              // Specified distance resolution of the sensor output in m
        float distance_stddev;                  // Specified distance standard deviation in m for gaussian noise model
        bool range_comp_threshold;              // Apply range compensation (*r^2) to received signal strength before thresholding
        float signal_strength_threshold_in_dBm; // Specified signal_strength threshold of the sensor at output in dBm
        float echo_separation_distance;         // Distance for separation of two echos in m, when no reflections registered in between
        float pulse_duration_mean = 4.5;        // Mean duration of the emitted laser pulse in ns
        float pulse_duration_stddev = 0.5;      // Standard deviation of the pulse duration of the emitted laser pulse in ns
        std::string echo_determination_mode;    // Determines what part of the echo pulse is taken for distance. Options: {"start" (default), "peak"}
        size_t intensity_or_epw;                // 0: Detections with intensity in %, 1: Detections with echo pulse width (epw) in m
        float epw_resolution;                   // Specified epw resolution of the sensor output in m
        float intensity_resolution;             // Specified intensity resolution of the sensor output in %
        float intensity_stddev;                 // Specified intensity standard deviation in %
        bool range_compensate_intensity;        // Compensate intensity by range with a factor of range^4
        float thres_distance_m;                 // Intensity range compensation starts at this distance
        std::vector<std::vector<float>> signal_strength_to_epw; // Lookup table for linear interpolation of epw part that correlates with signal strength in dBm

    } detection_sensing_parameters;
