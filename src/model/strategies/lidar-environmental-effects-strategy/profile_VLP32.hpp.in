//
// Copyright 2022 Technical University of Darmstadt - FZD
// SPDX-License-Identifier: MPL-2.0
//
        /// detection_environmental_effects_parameters

        //weather
        VLP32.det_envir_effects.calibrated_fog = false;                 // does a parameter set for fog calibrated from to world measurements exist?
        VLP32.det_envir_effects.fog_det_prob_factor = 0;                // factor for linear function with meteorological visibility

        VLP32.det_envir_effects.calibrated_rain = false;                // does a parameter set for rain calibrated from to world measurements exist?
        VLP32.det_envir_effects.rain_det_prob_factor = 0.000169;        // factor for linear function with precipitation rate
        VLP32.det_envir_effects.rain_detection_dist_distr_mu = 1.362;   // mean value for distance distribution of rain detections
        VLP32.det_envir_effects.rain_detection_dist_distr_sigma = 0.784;// standard deviation for distance distribution of rain detections

        VLP32.det_envir_effects.calibrated_snow = false;                // does a parameter set for snow calibrated from to world measurements exist?
        VLP32.det_envir_effects.snow_det_prob_factor = 0;               // factor for linear function with precipitation rate

        VLP32.det_envir_effects.calibrated_sun = false;                 // does a parameter set for direct sun light calibrated to real world measurements exist?

        VLP32.det_envir_effects.layer_comp_factors = {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0};    // compensation factor for an uneven distribution of atmospheric detections between layers (length equal to number of layers)
        VLP32.det_envir_effects.distance_distr_mu = 1.4329;             // mean value of log-normal distance distribution
        VLP32.det_envir_effects.distance_distr_sigma = 0.7868;          // standard deviation of log-normal distance distribution
        VLP32.det_envir_effects.intensity_distr_lambda = 0.69312;       // mean value of poisson intensity distribution

        //spray
        VLP32.det_envir_effects.calibrated_spray = true;                // does a parameter set for spray calibrated to real world measurements exist?
        VLP32.det_envir_effects.distance_distr_in_cluster_mu = -2.3;    // log mean value for distance distribution of detections in a spray cluster
        VLP32.det_envir_effects.distance_distr_in_cluster_sigma = 1.1;  // log standard deviation for distance distribution of detections in a spray cluster
        VLP32.det_envir_effects.mean_attenuation_in_cluster = 0.02;     // mean attenuation in spray cluster used for attenuation_factor = exp(-2.0 * mean_attenuation_in_cluster * distance_in_spray_cluster);
        VLP32.det_envir_effects.num_clusters_wfh_factor = 0.2;          // mean_num_clusters = (num_clusters_wfh_factor * water_film_height + num_clusters_wfh_offset) * (object_velocity * 3.6 - num_clusters_velocity_offset);
        VLP32.det_envir_effects.num_clusters_wfh_offset = 0.1;          // mean_num_clusters = (num_clusters_wfh_factor * water_film_height + num_clusters_wfh_offset) * (object_velocity * 3.6 - num_clusters_velocity_offset);
        VLP32.det_envir_effects.num_clusters_velocity_offset_kmh = 50.0;// mean_num_clusters = (num_clusters_wfh_factor * water_film_height + num_clusters_wfh_offset) * (object_velocity * 3.6 - num_clusters_velocity_offset);
        VLP32.det_envir_effects.cluster_radius_dist_mu = -1.2;          // log mean value for radius distribution of spray cluster
        VLP32.det_envir_effects.cluster_radius_dist_sigma = 0.8;        // log standard deviation for radius distribution of spray cluster