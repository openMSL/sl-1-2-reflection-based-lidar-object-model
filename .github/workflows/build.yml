name: Build

on:
  workflow_call:

jobs:
  build:
    name: Build FMU
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Model
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Cache Protobuf
      id: cache-protobuf
      uses: actions/cache@v3
      with:
        path: protobuf-21.12
        key: ${{ runner.os }}-protobuf

    - name: Download ProtoBuf
      if: steps.cache-protobuf.outputs.cache-hit != 'true'
      run: curl -OL https://github.com/protocolbuffers/protobuf/releases/download/v21.12/protobuf-all-21.12.tar.gz && tar xzvf protobuf-all-21.12.tar.gz

    - name: Build ProtoBuf
      if: steps.cache-protobuf.outputs.cache-hit != 'true'
      working-directory: protobuf-21.12
      run: ./configure DIST_LANG=cpp --disable-shared CXXFLAGS="-fPIC" && make

    - name: Install ProtoBuf
      working-directory: protobuf-21.12
      run: sudo make install && sudo ldconfig

    - name: Prepare C++ Build
      run: mkdir build

    - name: Configure CMake
      working-directory: build
      run: cmake -DCMAKE_PREFIX_PATH:PATH=${DEPS_DIR}/protobuf/install ..

    - name: Build C++
      working-directory: build
      run: cmake --build .

    - name: Create FMU Directory
      working-directory: build
      run: mkdir /tmp/model_fmu

    - name: Copy Model FMU
      working-directory: build
      run: cp ${{ github.event.repository.name }}.fmu /tmp/model_fmu/${{ github.event.repository.name }}.fmu

    - name: Cache Model FMU
      id: cache-model-fmu
      uses: actions/cache@v3
      with:
        path: /tmp/model_fmu
        key: ${{ runner.os }}-model-fmu

    - name: Commit ID
      run: |
        echo "Commit ID: "
        echo $(git rev-parse --short HEAD)
